api_version: 3
name: auth_test
description: Flare project to test authorization

participants:
  - name: overseer
    type: overseer
    org: flare_org
    protocol: https
    api_root: /api/v1
    port: 8443
  - name: server-1
    type: server
    org: flare_org
    fed_learn_port: 8002
    admin_port: 8003
  - name: site-a
    type: client
    org: org_a
  - name: site-b
    type: client
    org: org_b
  - name: admin@flare.com
    type: admin
    org: flare_org
    roles:
      - super
  - name: user-a@a.org
    type: admin
    org: org_a
    roles:
      - trainer
  - name: user-b@b.org
    type: admin
    org: org_b
    roles:
      - trainer

# The same methods in all builders are called in their order defined in builders section
builders:
  - path: flare.lighter.impl.workspace.WorkspaceBuilder
    args:
      template_file: master_template.yml
  - path: flare.lighter.impl.template.TemplateBuilder
  - path: flare.lighter.impl.static_file.StaticFileBuilder
    args:
      # config_folder can be set to inform [BLINDED] FLARE where to get configuration
      config_folder: config

      # app_validator is used to verify if uploaded app has proper structures
      # if not set, no app_validator is included in fed_server.json
      # app_validator: PATH_TO_YOUR_OWN_APP_VALIDATOR

      # when docker_image is set to a docker image name, docker.sh will be generated on server/client/admin
      # docker_image:

      overseer_agent:
        path: flare.ha.overseer_agent.HttpOverseerAgent
        # if overseer_exists is true, args here are ignored.  Provisioning
        #   tool will fill role, name and other local parameters automatically.
        # if overseer_exists is false, args in this section will be used.
        overseer_exists: true
        # args:
        #   sp_end_point: example1.com.8002:8003

      snapshot_persistor:
        path: flare.app_common.state_persistors.storage_state_persistor.StorageStatePersistor
        args:
          uri_root: /
          storage:
            path: flare.app_common.storages.filesystem_storage.FilesystemStorage
            args:
              root_dir: /tmp/flare/snapshot-storage
              uri_root: /

      components:
        server:
          - id: job_scheduler  # This id is reserved by system.  Do not change it.
            path: flare.app_common.job_schedulers.job_scheduler.DefaultJobScheduler
            args:
              max_jobs: 1
          - id: job_manager    # This id is reserved by system.  Do not change it.
            path: flare.apis.impl.job_def_manager.SimpleJobDefManager
            args:
              uri_root: /tmp/flare/jobs-storage
              job_store_id: job_store
          - id: job_store
            path: flare.app_common.storages.filesystem_storage.FilesystemStorage
        client:
          - id: resource_manager    # This id is reserved by system.  Do not change it.
            path: flare.app_common.resource_managers.list_resource_manager.ListResourceManager
            args:
              resources:
                gpu: [0, 1, 2, 3]
          - id: resource_consumer    # This id is reserved by system.  Do not change it.
            path: flare.app_common.resource_consumers.gpu_resource_consumer.GPUResourceConsumer
            args:
              gpu_resource_key: gpu
              
  - path: flare.lighter.impl.auth_policy.AuthPolicyBuilder
    args:
      orgs:
        flare_org:
          - general
          - strict
        org_a:
          - general
          - strict
        org_b:
          - general
          - relaxed
      roles:
        super: super user of system
        trainer: user can train on their own site
      groups:
        general:
          desc: Group with common roles
          role_rights:
            super:
              upload_app: true
              deploy_all: true
              train_all: true
              view_all: true
              operate_all: true
            trainer:
              train_self: true
              view_self: true

        strict:
          desc: org group with strict policies
          rules:
            allow_byoc: false
            allow_custom_datalist: false

        relaxed:
          desc: org group with relaxed policies
          rules:
            allow_byoc: true
            allow_custom_datalist: true

      disabled: false
  - path: flare.lighter.impl.cert.CertBuilder
  # - path: flare.lighter.impl.he.HEBuilder
  #   args:
  #     poly_modulus_degree: 8192 
  #     coeff_mod_bit_sizes: [60, 40, 40]
  #     scale_bits: 40
  #     scheme: CKKS
  - path: flare.lighter.impl.signature.SignatureBuilder
  - path: flare.lighter.impl.workspace.DistributionBuilder
    args:
      zip_password: false

